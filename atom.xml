<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Something]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://iamcc.github.io/"/>
  <updated>2016-01-21T07:23:23.000Z</updated>
  <id>http://iamcc.github.io/</id>
  
  <author>
    <name><![CDATA[CC]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Google搜索技巧]]></title>
    <link href="http://iamcc.github.io/2016/01/21/Google%E6%90%9C%E7%B4%A2%E6%8A%80%E5%B7%A7/"/>
    <id>http://iamcc.github.io/2016/01/21/Google搜索技巧/</id>
    <published>2016-01-21T07:20:06.000Z</published>
    <updated>2016-01-21T07:23:23.000Z</updated>
    <content type="html"><![CDATA[<p><br>    在今天，用户可以通过搜索引擎轻松找出自己想要的信息，但还是难以避免结果不尽如人意的情况。实际上，用户仅需掌握几个常用技巧即可轻松化解这种尴尬。下面介绍 10 个在进行 Google 搜索时可以使用的便捷技巧，其他搜索引擎也支持这 10 种技巧。<br></p><br><a id="more"></a><br><p>1、准确搜索</p><br><p align="center"><br>    <img height="324" alt="" width="498" src="http://cimage.tianjimedia.com/uploadImages/20160120090324113.jpg"></p><br><p>最简单、有效的准确搜索方式是在关键词上加上双引号，在这种情况下，搜索引擎只会反馈和关键词完全吻合的搜索结果。</p><br><p><br>    比方说在搜索「Joe Bloggs」的时候，在没有给关键词加上双引号的情况，搜索引擎会显示所有分别和「Joe」以及「Bloggs」相关的信息，但这些显然并不是我们想要 的结果。但在加上双引号后，搜索引擎则仅会在页面上反馈和「Joe Bloggs」相吻合的信息。<br></p><br><p>准确搜索在排除常见但相近度偏低的信息时非常有用，可以为用户省去再度对结果进行筛选的麻烦。</p><br><p>2、排除关键词</p><br><p align="center"><br>    <img height="351" alt="" width="498" src="http://cimage.tianjimedia.com/uploadImages/20160120090324931.jpg"></p><br><p>如果在进行准确搜索时没有找到自己想要的结果，用户可以对包含特定词汇的信息进行排除，仅需使用减号即可。</p><br><p><br>    例如在搜索「『Joe Bloggs』-jeans」时，你所得到的结果反馈是不包含「jeans」字眼的「Joe Bloggs」条目。<br></p><br><p>3、用「Either OR」(或)逻辑进行搜索</p><br><p align="center"><br>    <img height="295" alt="" width="493" src="http://cimage.tianjimedia.com/uploadImages/20160120090324130.jpg"></p><br><p><br>    在默认搜索下，搜索引擎会反馈所有和查询词汇相关的结果，但通过使用「OR」逻辑，你可以得到和两个关键词分别相关的结果，而不仅仅是和两个关键词 都同时相关的结果。巧妙使用「OR」搜索可以让你在未能确定哪个关键词对于搜索结果起决定作用时依然可以确保搜索结果的准确性。<br></p><br><p>4、同义词搜索</p><br><p align="center"><br>    <img height="272" alt="" width="454" src="http://cimage.tianjimedia.com/uploadImages/20160120090325927.jpg"></p><br><p>有时候对不太确切的关键词进行搜索反而会显得更加合适。在未能准确判断关键词的情况下，你可以通过同义词进行搜索。</p><br><p><br>    如果你在搜索引擎输入「plumbing ~university」，你所得到的反馈结果会包含「plumbing universities」和「plumbing colleges」等相似条目。<br></p><br><p>5、在站内进行搜索</p><br><p align="center"><br>    <img height="303" alt="" width="498" src="http://cimage.tianjimedia.com/uploadImages/20160120090325251.jpg"></p><br><p>绝大部分网站的搜索功能都有所欠缺，因此，更好的方法是通过 Google 等搜索引擎对站内的信息进行搜索。</p><br><p><br>    你只需要在搜索引擎上输入「site:theguardian.com」加上关键词，搜索引擎就会反馈网站「theguardian.com」内和关键词相关的所有条目。如果再结合准确搜索功能，这项功能将会变得更加强大。<br></p><br><p>6、善用星号</p><br><p align="center"><br>    <img height="306" alt="" width="498" src="http://cimage.tianjimedia.com/uploadImages/20160120090325603.jpg"></p><br><p><br>    正如拼图游戏「Scrabble」的空白方块一样，在搜索引擎中，我们可以用星号填补关键词中的缺失部分，不论缺失的是一连串单词的其中一个还是一个单词的某一部分。此外，当你希望搜索一篇确定性偏低的文章时，也可以使用星号填补缺失部分。<br></p><br><p><br>    例如，如果你在搜索引擎中输入「architect*」，你所得到的反馈结果将会是所有包含 architect、architectural、architecture、architected、architecting 以及其他所有以「architect」作为开头的词汇的条目。<br></p><br><p>7、在两个数值之间进行搜索</p><br><p align="center"><br>    <img height="303" alt="" width="498" src="http://cimage.tianjimedia.com/uploadImages/20160120090325874.jpg"></p><br><p><br>    在寻找问题的答案时，一个很好的方法是在一定范围内寻找和关键词相关的资讯。例如想要找出 1920 至 1950 年间的英国首相，直接在搜索引擎中输入「英国首相 1920.. 1950」即可得出想要的结果。<br></p><br><p>记住，数值之间的符号是两个英文句号加一个空格键。</p><br><p>8、在网页标题、链接和主体中搜索关键词</p><br><p align="center"><br>    <img height="338" alt="" width="498" src="http://cimage.tianjimedia.com/uploadImages/20160120090325238.jpg"></p><br><p><br>    有时你或许会遇上找出所有和关键词相关的所有网页标题、链接和网页主体的需求，在这个时候你需要使用的是限定词「inurl:」(供在 url 链接中搜索使用)、「intext:」(供在网页主体中搜索使用)以及「intitle:」(供在网页标题中搜索使用)。<br></p><br><p>例如，在搜索引擎中输入「intitle: 评测」会得到所有和关键词「评测」相关的网页标题。</p><br><p>9、搜索相关网站</p><br><p align="center"><br>    <img height="298" alt="" width="497" src="http://cimage.tianjimedia.com/uploadImages/20160120090325204.jpg"></p><br><p><br>    相关的限定词可用于搜索相关网站时使用。例如，你仅需在搜索引擎中输入「related:theguardian.com」即可得到所有和「theguardian.com」相关的网站反馈结果。<br></p><br><p>10、搜索技能的组合使用</p><br><p align="center"><br>    <img height="337" alt="" width="498" src="http://cimage.tianjimedia.com/uploadImages/20160120090326648.jpg"></p><br><p><br>    你可以对上述所有搜索技能进行组合运用，以便按照自己的意愿缩小或者扩展搜索范围。尽管有些技能或许并不常用，但准确搜索和站内搜索这些技能的使用范围还是相当广泛的。<br></p><br><p><br>    随着 Google 等搜索引擎对于用户自然语言的理解程度与日俱增，这些搜索技能可以派上用场的情况或许将会变得越来越少，至少这是所有搜索引擎共同追求的目标。但是在当下，掌握这些搜索技能还是非常必要的。<br></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><br>    在今天，用户可以通过搜索引擎轻松找出自己想要的信息，但还是难以避免结果不尽如人意的情况。实际上，用户仅需掌握几个常用技巧即可轻松化解这种尴尬。下面介绍 10 个在进行 Google 搜索时可以使用的便捷技巧，其他搜索引擎也支持这 10 种技巧。<br></p><br>]]>
    
    </summary>
    
      <category term="google" scheme="http://iamcc.github.io/tags/google/"/>
    
      <category term="search" scheme="http://iamcc.github.io/tags/search/"/>
    
      <category term="tech" scheme="http://iamcc.github.io/tags/tech/"/>
    
      <category term="tech" scheme="http://iamcc.github.io/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[快速提高Android开发效率的Web工具]]></title>
    <link href="http://iamcc.github.io/2016/01/21/%E5%BF%AB%E9%80%9F%E6%8F%90%E9%AB%98Android%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E7%9A%84Web%E5%B7%A5%E5%85%B7/"/>
    <id>http://iamcc.github.io/2016/01/21/快速提高Android开发效率的Web工具/</id>
    <published>2016-01-21T06:45:10.000Z</published>
    <updated>2016-01-21T07:23:01.000Z</updated>
    <content type="html"><![CDATA[<p>出自 <a href="http://droidyue.com/blog/2014/08/03/great-web-tools-for-android-development/" target="_blank" rel="external">http://droidyue.com/blog/2014/08/03/great-web-tools-for-android-development/</a></p>
<div class="entry-content"><br>    <p><br>        在Google的广大支持下，便捷开发Android程序的Native工具层出不穷。其实Android开发涉及到的范围也不小，一些Web工具有时候也会带来事半功倍的效果。有些甚至是一些native应用无法做到的。本文，将简单列举一下本人正在使用的一些工具，当然也会持续更新。<br>    </p><br><br>    <a id="more"></a><br><br>    <h2>查找优秀的参考工程</h2><br><br>    <p><br>        codota是一个查找可供参考的Android工程的网站，它的爬虫已经采集了将近7百万个工程。比如我们想要写一段Android中检测网络可用性的代码，我们只需要在搜索框中输入network，就会找到已经存在的优秀工程中关于这一逻辑的具体实现，确实为我们编码节省不少重复造轮子的成本。另外，codeta还有支持Android Studio的插件，让查找源码更快捷。<br>    </p><br><br>    <p><br>        地址:<br>        <a href="http://www.codota.com/" target="_blank">codota,Find Great Code Examples</a><br>    </p><br><br>    <h2>Android军火库</h2><br><br>    <p _hover-ignore="1"><br>        android-arsenal，中文意思 Android军火库，里面收集了Android中的SDK，Library以及Android开发的工具，满满的干货。有木有一种想见恨晚的赶脚，快来加入书签吧。<br>    </p><br><br>    <p><br>        地址:<br>        <a href="http://android-arsenal.com/" target="_blank" _hover-ignore="1"><br>            The Android Arsenal – A categorized directory of free libraries and tools for Android<br>        </a><br>    </p><br><br>    <p>注意https协议的地址稍有问题，建议使用http协议的地址。</p><br><br>    <h2>在线反编译</h2><br><br>    <p><br>        当你还在花时间切换不同的反编译工具时，一个在线反编译网站应运而生，它就是<br>        <a href="http://www.decompileandroid.com/" target="_blank">Android APK Decompiler</a><br>        ，只需上传要反编译的apk包，无需多时，源码可以下载下来了。<br>    </p><br><br>    <p><br>        地址：<br>        <a href="http://www.decompileandroid.com/" target="_blank">Android APK Decompiler</a><br>    </p><br><br>    <h2>Grepcode</h2><br><br>    <p><br>        grepcode.com是一个Java源码搜索引擎，对于查看Android代码也不例外。并且支持多个API版本快速切换查看。如果你的IDE关联本地代码后，让机器累的喘不过气来，那么就试一试这个在线的工具吧。<br>    </p><br><br>    <p><br>        地址：<br>        <a href="http://grepcode.com/search/?query=google+android&amp;entity=project" target="_blank">grepcode.com</a><br>    </p><br><br>    <h2>Android Asset Studio</h2><br><br>    <p><br>        这是一个神奇的网页，里面包含了多个与资源相关的在线工具，比如icon制作（桌面icon，通知栏icon等），9patch图片制作，ActionBar样式等相关的工具。当你有资源相关的工作时，不妨试一试这个网页工具。<br>    </p><br><br>    <p><br>        地址：<br>        <a href="http://romannurik.github.io/AndroidAssetStudio/index.html" target="_blank">Android Asset Studio</a><br>    </p><br><br>    <h2>快速下载Google Play应用</h2><br><br>    <p><br>        由于一些你懂的原因，国内无法直接访问Google Play商店。而且下载Google Play商店还是需要登陆谷歌账户，以国内的网络，下载成功简直是太困难了。<br>        <br>这里介绍一款不需要账户国内即可访问的Web工具。可以通过输入包名或者Google Play地址即可下载。</p><br><br>    <p><br>        地址:<br>        <a href="http://apps.evozi.com/apk-downloader/" target="_blank">APK Downloader</a><br>    </p><br><br>    <h2>进制转换</h2><br><br>    <p><br>        Android中所有的资源都有一个对应的资源ID，资源ID的类型为16进制的整数。有些时候特殊的场合处理资源ID，为了调试需要进行进制转换，比如16进制转常用的10进制。不用自己算，使用下面的工具就可以轻松搞定。<br>    </p><br><br>    <p><br>        地址：<br>        <a href="http://www.binaryhexconverter.com/hex-to-decimal-converter" target="_blank">Hex To Decimal Converter</a><br>    </p><br><br>    <h2>UI相关必备</h2><br><br>    <p><br>        通常UI设计师都会给开花童鞋色值，当疏忽的时候，我们可以使用截图软件得到10进制的三个值，然后将其转换成色值。这里有一个便捷的RGB工具。<br>    </p><br><br>    <p><br>        地址：<br>        <a href="http://www.colorspire.com/rgb-color-wheel/" target="_blank">RGB Color Wheel/</a><br>    </p><br><br>    <h2>JSON格式化</h2><br><br>    <p><br>        在CS应用中，客户端和服务器端通常使用json作为数据交换格式。当分析的时候，我们必然是将raw数据转换成可读性更高的。快来使用这个强大的工具吧。<br>    </p><br><br>    <p><br>        地址：<br>        <a href="http://json.parser.online.fr/" target="_blank">JSON Parser</a><br>    </p><br><br>    <h2>查看HTML5,JS,CSS可用情况</h2><br><br>    <p><br>        caniuse.com是一个检测HTML5，JS，CSS在各个浏览器平台是否可用的web工具。便于我们了解前端方案是否在目标设备上是否有效。<br>    </p><br><br>    <p><br>        地址：<br>        <a href="http://caniuse.com/#search=queryselector" target="_blank">caniuse.com</a><br>    </p><br></div>
]]></content>
    <summary type="html">
    <![CDATA[<p>出自 <a href="http://droidyue.com/blog/2014/08/03/great-web-tools-for-android-development/">http://droidyue.com/blog/2014/08/03/great-web-tools-for-android-development/</a></p>
<div class="entry-content"><br>    <p><br>        在Google的广大支持下，便捷开发Android程序的Native工具层出不穷。其实Android开发涉及到的范围也不小，一些Web工具有时候也会带来事半功倍的效果。有些甚至是一些native应用无法做到的。本文，将简单列举一下本人正在使用的一些工具，当然也会持续更新。<br>    </p><br><br>]]>
    
    </summary>
    
      <category term="android" scheme="http://iamcc.github.io/tags/android/"/>
    
      <category term="tech" scheme="http://iamcc.github.io/tags/tech/"/>
    
      <category term="tools" scheme="http://iamcc.github.io/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2016]]></title>
    <link href="http://iamcc.github.io/2016/01/20/2016/"/>
    <id>http://iamcc.github.io/2016/01/20/2016/</id>
    <published>2016-01-20T01:06:31.000Z</published>
    <updated>2016-01-21T07:23:09.000Z</updated>
    <content type="html"><![CDATA[<p>2016 想记录点什么。</p>
<a id="more"></a>
<p>但是。。。暂时还不知道要记录什么。😂</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>2016 想记录点什么。</p>]]>
    
    </summary>
    
      <category term="personal" scheme="http://iamcc.github.io/tags/personal/"/>
    
      <category term="personal" scheme="http://iamcc.github.io/categories/personal/"/>
    
  </entry>
  
</feed>
