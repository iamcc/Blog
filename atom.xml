<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Something]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://iamcc.github.io/"/>
  <updated>2016-03-04T01:00:50.000Z</updated>
  <id>http://iamcc.github.io/</id>
  
  <author>
    <name><![CDATA[CC]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[基于Mesos和Docker的分布式计算平台]]></title>
    <link href="http://iamcc.github.io/2016/03/04/%E5%9F%BA%E4%BA%8EMesos%E5%92%8CDocker%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E8%AE%A1%E7%AE%97%E5%B9%B3%E5%8F%B0/"/>
    <id>http://iamcc.github.io/2016/03/04/基于Mesos和Docker的分布式计算平台/</id>
    <published>2016-03-04T00:58:35.000Z</published>
    <updated>2016-03-04T01:00:50.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://blog.dataman-inc.com/2015-06-13-mesos-docker-distributed-computing-platform/" target="_blank" rel="external">http://blog.dataman-inc.com/2015-06-13-mesos-docker-distributed-computing-platform/</a></p>
<a id="more"></a>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://blog.dataman-inc.com/2015-06-13-mesos-docker-distributed-computing-platform/">http://blog.dataman-inc.com/2015-06-13-mesos-docker-distributed-computing-platform/</a></p>]]>
    
    </summary>
    
      <category term="cluster" scheme="http://iamcc.github.io/tags/cluster/"/>
    
      <category term="docker" scheme="http://iamcc.github.io/tags/docker/"/>
    
      <category term="mesos" scheme="http://iamcc.github.io/tags/mesos/"/>
    
      <category term="tech" scheme="http://iamcc.github.io/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Use podcast to learn English]]></title>
    <link href="http://iamcc.github.io/2016/02/29/Use-podcast-to-learn-English/"/>
    <id>http://iamcc.github.io/2016/02/29/Use-podcast-to-learn-English/</id>
    <published>2016-02-29T00:37:33.000Z</published>
    <updated>2016-02-29T00:43:21.000Z</updated>
    <content type="html"><![CDATA[<p>最近不知道发什么疯，又把podcast 听起来了，所以记录下几个节目单。</p>
<ol>
<li>Wait Wait… Don’t Tell Me!</li>
<li>Learning English for China</li>
<li>English as a Second Language</li>
<li>Special English</li>
<li>英语口语每天学</li>
<li>英语怎么说？</li>
<li>英语铺子</li>
<li>摩天轮（More to learn)</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近不知道发什么疯，又把podcast 听起来了，所以记录下几个节目单。</p>
<ol>
<li>Wait Wait… Don’t Tell Me!</li>
<li>Learning English for China</li>
<li>English as a Sec]]>
    </summary>
    
      <category term="english" scheme="http://iamcc.github.io/tags/english/"/>
    
      <category term="podcast" scheme="http://iamcc.github.io/tags/podcast/"/>
    
      <category term="study" scheme="http://iamcc.github.io/tags/study/"/>
    
      <category term="language" scheme="http://iamcc.github.io/categories/language/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Top 5 Android libraries every Android developer should know about - v. 2015]]></title>
    <link href="http://iamcc.github.io/2016/02/26/Top-5-Android-libraries-every-Android-developer-should-know-about-v-2015/"/>
    <id>http://iamcc.github.io/2016/02/26/Top-5-Android-libraries-every-Android-developer-should-know-about-v-2015/</id>
    <published>2016-02-26T02:54:05.000Z</published>
    <updated>2016-02-26T02:54:56.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li>原文链接 : <a href="https://infinum.co/the-capsized-eight/articles/top-five-android-libraries-every-android-developer-should-know-about-v2015" target="_blank" rel="external">Top 5 Android libraries every Android developer should know about - v. 2015</a></li>
<li>原文作者 : <a href="https://infinum.co/the-capsized-eight/author/ivan-kust" target="_blank" rel="external">Infinum</a></li>
<li>译文出自 : <a href="https://github.com/xitu/gold-miner" target="_blank" rel="external">掘金翻译计划</a></li>
<li>译者 : <a href="https://github.com/kassadin" target="_blank" rel="external">Kassadin</a></li>
<li>校对者: <a href="https://github.com/xiuweikang" target="_blank" rel="external">xiuweikang</a> <a href="https://github.com/lihb" target="_blank" rel="external">lihb</a></li>
<li>状态 : </li>
</ul>
<p>在2014年6月，我们发表了一篇关于<a href="https://infinum.co/the-capsized-eight/articles/top-5-android-libraries-every-android-developer-should-know-about" target="_blank" rel="external">5 个顶级 Android 开源库</a>的文章，我们一直在用，并且相信每个 Android 开发者都应该了解这些开源库。从那之后，Android 方面已经发生了很多变化，所以我们写了这篇文章，我们最喜欢的5个开源库的更新版。</p>
<p>下面是更新列表:</p>
<p><img src="https://s3.amazonaws.com/infinum.web.production/repository_items/files/000/000/308/original/top_5_android_libraries.png?1402486321" alt="Top 5 Android libraries"></p>
<h2 id="1-_Retrofit"><a href="#1-_Retrofit" class="headerlink" title="1. Retrofit"></a>1. <a href="https://github.com/square/retrofit/tree/version-one" target="_blank" rel="external">Retrofit</a></h2><p>当涉及到实现 REST APIs 时，Retrofit 仍是我们的最爱。</p>
<p>他们的网站上写着: “Retrofit 将 REST API 转换为 Java 接口。”是的，还有其他解决方案，但是 Retrofit 已经被证明是在一个项目中管理 API 调用最优雅、最方便的解决方案。使用注解添加请求方法和相对地址使得代码干净简单。</p>
<p>通过注解，你可以轻松地添加请求体，操作 URL 或请求头并添加查询参数。</p>
<p>为方法添加返回类型会使该方法同步执行，然而添加Callback（回调）会使之异步执行，完成后回调 success 或 failure 方法。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RetrofitInterface</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 异步带回调</span></span><br><span class="line">    <span class="annotation">@GET</span>(<span class="string">"/api/user"</span>)</span><br><span class="line">    <span class="function">User <span class="title">getUser</span><span class="params">(@Query(<span class="string">"user_id"</span>)</span> <span class="keyword">int</span> userId, Callback&lt;User&gt; callback)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 同步</span></span><br><span class="line">    <span class="annotation">@POST</span>(<span class="string">"/api/user/register"</span>)</span><br><span class="line">    <span class="function">User <span class="title">registerUser</span><span class="params">(@Body User user)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 例子</span></span><br><span class="line">RetrofitInterface retrofitInterface = <span class="keyword">new</span> RestAdapter.Builder()</span><br><span class="line">            .setEndpoint(API.API_URL).build().create(RetrofitInterface.class);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取 id 为 2048 的用户</span></span><br><span class="line">retrofitInterface.getUser(<span class="number">2048</span>, <span class="keyword">new</span> Callback&lt;User&gt;() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">success</span><span class="params">(User user, Response response)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">failure</span><span class="params">(RetrofitError retrofitError)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>Retrofit 默认使用 <a href="https://code.google.com/p/google-gson/" target="_blank" rel="external">Gson</a>，所以不需要手动解析 JSON。当然其他的转换器也是支持的。</p>
<p>现在 Retrofit 2.0 正在活跃地开发着，仍然是 beta，但你可以从<a href="http://square.github.io/retrofit/" target="_blank" rel="external">这里</a>获取到。从 Retrofit 1.9 开始，很多的东西都被砍了，也有一些重大的变化比如使用新的调用接口取代回调。</p>
<h2 id="2-_DBFlow"><a href="#2-_DBFlow" class="headerlink" title="2. DBFlow"></a>2. <a href="https://github.com/Raizlabs/DBFlow" target="_blank" rel="external">DBFlow</a></h2><p>如果你正准备在你的项目中存储任意复杂的数据，你应该使用 DBFlow。正如他们的 GitHub 上所说，这是“一个速度极快，功能强大，而且非常简单的 Android 数据库 ORM 库，为你编写数据库代码”。</p>
<p>一些简单的栗子:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Query a List</span></span><br><span class="line"><span class="keyword">new</span> Select().from(SomeTable.class).queryList();</span><br><span class="line"><span class="keyword">new</span> Select().from(SomeTable.class).where(conditions).queryList();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Query Single Model</span></span><br><span class="line"><span class="keyword">new</span> Select().from(SomeTable.class).querySingle();</span><br><span class="line"><span class="keyword">new</span> Select().from(SomeTable.class).where(conditions).querySingle();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Query a Table List and Cursor List</span></span><br><span class="line"><span class="keyword">new</span> Select().from(SomeTable.class).where(conditions).queryTableList();</span><br><span class="line"><span class="keyword">new</span> Select().from(SomeTable.class).where(conditions).queryCursorList();</span><br><span class="line"></span><br><span class="line"><span class="comment">// SELECT methods</span></span><br><span class="line"><span class="keyword">new</span> Select().distinct().from(table).queryList();</span><br><span class="line"><span class="keyword">new</span> Select().all().from(table).queryList();</span><br><span class="line"><span class="keyword">new</span> Select().avg(SomeTable$Table.SALARY).from(SomeTable.class).queryList();</span><br><span class="line"><span class="keyword">new</span> Select().method(SomeTable$Table.SALARY, <span class="string">"MAX"</span>).from(SomeTable.class).queryList();</span><br></pre></td></tr></table></figure>
<p>DBFlow 是一个不错的 ORM，这将消除大量用于处理数据库的样板代码。虽然 Android 也有其他的 ORM 方案，但对我们来说 DBFlow 已被证明是最好的解决方案。</p>
<h2 id="3-_Glide"><a href="#3-_Glide" class="headerlink" title="3. Glide"></a>3. <a href="https://github.com/bumptech/glide" target="_blank" rel="external">Glide</a></h2><p>Glide 是一个用于加载图片的库。当前备选方案有 <a href="https://github.com/nostra13/Android-Universal-Image-Loader" target="_blank" rel="external">Universal Image Loader</a> 和 <a href="https://github.com/square/picasso" target="_blank" rel="external">Picasso</a>；但是，以我来看，Glide 是当前的最佳选择。</p>
<p>下面是一个简单的例子，关于如何使用 Glide 从 URL 加载图片到 ImageView。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ImageView imageView = (ImageView) findViewById(R.id.my_image_view);</span><br><span class="line"></span><br><span class="line">Glide.with(<span class="keyword">this</span>).load(<span class="string">"http://goo.gl/gEgYUd"</span>).into(imageView);</span><br></pre></td></tr></table></figure>
<h2 id="4-_Butterknife"><a href="#4-_Butterknife" class="headerlink" title="4. Butterknife"></a>4. <a href="http://jakewharton.github.io/butterknife/" target="_blank" rel="external">Butterknife</a></h2><p>一个用于将 Android 视图绑定到属性和方法的库（例如，绑定一个 view 的 OnClick 事件到一个方法）。较之前版本而言，基本功能没有变化，但可选项增加了。栗子：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExampleActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line">  <span class="annotation">@Bind</span>(R.id.title) TextView title;</span><br><span class="line">  <span class="annotation">@Bind</span>(R.id.subtitle) TextView subtitle;</span><br><span class="line">  <span class="annotation">@Bind</span>(R.id.footer) TextView footer;</span><br><span class="line"></span><br><span class="line">  <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.simple_activity);</span><br><span class="line">    ButterKnife.bind(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">// TODO Use fields...</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="5-_Dagger_2"><a href="#5-_Dagger_2" class="headerlink" title="5. Dagger 2"></a>5. <a href="http://google.github.io/dagger/" target="_blank" rel="external">Dagger 2</a></h2><p>自从我们迁移到 MVP 架构，我们就开始了广泛使用依赖注入。Dagger 2 是著名的依赖注入库 Dagger 的继承者，我们强烈推荐它。</p>
<p>一个主要的改进就是生成的注入代码不再依赖反射，这使得调试容易了许多。</p>
<p>Dagger 为您创建类的实例，并满足他们的依赖。这依赖于 javax.inject.Inject 注解，以确定哪些构造函数或字段应被视为依赖。以著名的咖啡机(CoffeeMaker)为例:</p>
<blockquote>
<p>译者注：Dagger 和 Dagger 2 的官方文档里都是使用这个例子，所以著名…</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Thermosiphon</span> <span class="keyword">implements</span> <span class="title">Pump</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Heater heater;</span><br><span class="line"></span><br><span class="line">  <span class="annotation">@Inject</span></span><br><span class="line">  Thermosiphon(Heater heater) &#123;</span><br><span class="line">    <span class="keyword">this</span>.heater = heater;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>直接注入到字段的栗子：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CoffeeMaker</span> </span>&#123;</span><br><span class="line">  <span class="annotation">@Inject</span> Heater heater;</span><br><span class="line">  <span class="annotation">@Inject</span> Pump pump;</span><br><span class="line"></span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>通过 modules 和 @Proivides 注解提供依赖(Dependencies)：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Module</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DripCoffeeModule</span> </span>&#123;</span><br><span class="line">  <span class="annotation">@Provides</span> <span class="function">Heater <span class="title">provideHeater</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ElectricHeater();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="annotation">@Provides</span> <span class="function">Pump <span class="title">providePump</span><span class="params">(Thermosiphon pump)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> pump;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>关于依赖注入本身，如果想获取更多信息，请查看 Dagger 2 主页或 <a href="https://www.youtube.com/watch?v=oK_XtfXPkqw" target="_blank" rel="external">talk about Dagger 2 by Gregory Kick</a>。</p>
<h3 id="u9644_u52A0_u94FE_u63A5"><a href="#u9644_u52A0_u94FE_u63A5" class="headerlink" title="附加链接"></a>附加链接</h3><p><a href="http://androidweekly.net/" target="_blank" rel="external">Android 周报</a> 仍然是学习 Android 库最好的资源之一。这是关于Android开发的每周时事资讯。</p>
<p>此外，下面是 Android 行业经常发关于 Android 开发文章的大咖们：</p>
<p><a href="https://twitter.com/JakeWharton" target="_blank" rel="external">Jake Wharton</a> <a href="https://twitter.com/chrisbanes" target="_blank" rel="external">Chris Banes</a> <a href="https://twitter.com/cyrilmottier" target="_blank" rel="external">Cyril Mottier</a> <a href="https://twitter.com/commonsguy" target="_blank" rel="external">Mark Murphy</a> <a href="https://twitter.com/MarkIAllison" target="_blank" rel="external">Mark Allison</a> <a href="https://twitter.com/retomeier" target="_blank" rel="external">Reto Meier</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li>原文链接 : <a href="https://infinum.co/the-capsized-eight/articles/top-five-android-libraries-every-android-developer-should-know-about]]>
    </summary>
    
      <category term="android" scheme="http://iamcc.github.io/tags/android/"/>
    
      <category term="dev" scheme="http://iamcc.github.io/tags/dev/"/>
    
      <category term="lib" scheme="http://iamcc.github.io/tags/lib/"/>
    
      <category term="tech" scheme="http://iamcc.github.io/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MongoDB 分布式部署教程]]></title>
    <link href="http://iamcc.github.io/2016/02/24/MongoDB-%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2%E6%95%99%E7%A8%8B/"/>
    <id>http://iamcc.github.io/2016/02/24/MongoDB-分布式部署教程/</id>
    <published>2016-02-24T07:23:23.000Z</published>
    <updated>2016-02-24T07:46:59.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://mr-dai.github.io/mongodb/2015/11/23/MongoDB-Distribution-Tutorial.html" target="_blank" rel="external">MongoDB 分布式部署教程</a></p>
<a id="more"></a>
<p>另外记一次数据库恢复过程。</p>
<h3 id="u524D_u56E0"><a href="#u524D_u56E0" class="headerlink" title="前因"></a>前因</h3><p>服务器因为受到用户抢红包而超负荷Down机，在没有意识的情况下直接重启了服务，结果出现了所有服务都出现了问题，最终定位为数据库连接失败。立即上服务器查询，第一感觉是一切良好，没有什么问题，唯一一个奇怪的地方就是，每个分片的Replset 的数据都正常，但是mongoos的collections却少了好多。Google一番还是没结果，😂，正欲哭无泪的时候想起了阿里的同学，经过一番帮助，终于恢复正常。</p>
<h3 id="u539F_u56E0"><a href="#u539F_u56E0" class="headerlink" title="原因"></a>原因</h3><p>出现collection数量不同步的原因原来是主shard出现了问题，重启服务的时候，不知什么情况下，shard1的Replset找不到master，然后shard1启动失败了，然后主shard变成了shard2，查来查去都查不到问题，因为一切看起来都那么正常。而少了的那部份collections就是shard1里面的未sharding的collection，未sharding的collection是不会同步到其他shard，所以当主shard是shard2的时候自然就少了那部份collections</p>
<h3 id="u603B_u7ED3"><a href="#u603B_u7ED3" class="headerlink" title="总结"></a>总结</h3><p>😂，真是吓出一身冷汗，查不出问题也是因为经验不足和不够细心，也是对整套架构的了解不够，所以再次就一笔。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://mr-dai.github.io/mongodb/2015/11/23/MongoDB-Distribution-Tutorial.html">MongoDB 分布式部署教程</a></p>]]>
    
    </summary>
    
      <category term="cluster" scheme="http://iamcc.github.io/tags/cluster/"/>
    
      <category term="database" scheme="http://iamcc.github.io/tags/database/"/>
    
      <category term="mongodb" scheme="http://iamcc.github.io/tags/mongodb/"/>
    
      <category term="sharding" scheme="http://iamcc.github.io/tags/sharding/"/>
    
      <category term="tech" scheme="http://iamcc.github.io/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Chrome extensions]]></title>
    <link href="http://iamcc.github.io/2016/02/22/Chrome%20extensions/"/>
    <id>http://iamcc.github.io/2016/02/22/Chrome extensions/</id>
    <published>2016-02-22T05:53:25.000Z</published>
    <updated>2016-02-22T06:21:46.000Z</updated>
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th>name</th>
<th>detail</th>
</tr>
</thead>
<tbody>
<tr>
<td>JSONView</td>
<td>JSON 格式化查看器。<a href="https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc" target="_blank" rel="external">Download</a></td>
</tr>
<tr>
<td>Justinmind</td>
<td>用户查看产品部发布的产品图。<a href="https://chrome.google.com/webstore/detail/justinmind-extension/pnfffbfcdapknabgmlnpagljkjdejaap" target="_blank" rel="external">Download</a></td>
</tr>
<tr>
<td>Octo Linker</td>
<td>自动分析package.json 里面的包，增加跳转链接。<a href="https://chrome.google.com/webstore/detail/octo-linker/jlmafbaeoofdegohdhinkhilhclaklkp" target="_blank" rel="external">Download</a></td>
</tr>
<tr>
<td>Octotree</td>
<td>为Github 增加文件导航。<a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc" target="_blank" rel="external">Download</a></td>
</tr>
<tr>
<td>OneTab</td>
<td>当打开很多Tab的时候，电脑很慢，想暂时关闭的时候可以用。<a href="https://chrome.google.com/webstore/detail/onetab/chphlpgkkbolifaimnlloiipkdnihall" target="_blank" rel="external">Download</a></td>
</tr>
<tr>
<td>PageSpeed Insights (by Google)</td>
<td>前端页面优化分析工具。<a href="https://developers.google.com/speed/pagespeed/" target="_blank" rel="external">Download</a></td>
</tr>
<tr>
<td>Postman</td>
<td>API调试工具。<a href="https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop" target="_blank" rel="external">Download</a></td>
</tr>
<tr>
<td>Proxy SwitchySharp</td>
<td>翻墙工具。<a href="https://chrome.google.com/webstore/detail/proxy-switchysharp/dpplabbmogkhghncfbfdeeokoefdjegm" target="_blank" rel="external">Download</a></td>
</tr>
<tr>
<td>React Developer Tools</td>
<td>React 调试工具。<a href="https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi" target="_blank" rel="external">Download</a></td>
</tr>
<tr>
<td>Vue.js devtools</td>
<td>Vue.js 调试工具。<a href="https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd" target="_blank" rel="external">Download</a></td>
</tr>
<tr>
<td>草料二维码</td>
<td>二维码生成器。<a href="http://static.clewm.net/cli/addons/caoliao.crx" target="_blank" rel="external">Download</a></td>
</tr>
</tbody>
</table>
]]></content>
    <summary type="html">
    <![CDATA[<table>
<thead>
<tr>
<th>name</th>
<th>detail</th>
</tr>
</thead>
<tbody>
<tr>
<td>JSONView</td>
<td>JSON 格式化查看器。<a href="https://chrome.goo]]>
    </summary>
    
      <category term="app" scheme="http://iamcc.github.io/tags/app/"/>
    
      <category term="chrome" scheme="http://iamcc.github.io/tags/chrome/"/>
    
      <category term="extension" scheme="http://iamcc.github.io/tags/extension/"/>
    
      <category term="tools" scheme="http://iamcc.github.io/tags/tools/"/>
    
      <category term="tools" scheme="http://iamcc.github.io/categories/tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Sublime text 3 配置]]></title>
    <link href="http://iamcc.github.io/2016/02/17/Sublime-text-3-%E9%85%8D%E7%BD%AE/"/>
    <id>http://iamcc.github.io/2016/02/17/Sublime-text-3-配置/</id>
    <published>2016-02-17T08:29:50.000Z</published>
    <updated>2016-02-22T05:54:09.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>此文是基于<code>Mac</code>下的<code>Sublime text 3</code>版本的插件配置，不保证兼容<code>Sublime text 2</code>。</p>
</blockquote>
<a id="more"></a>
<h2 id="u63D2_u4EF6"><a href="#u63D2_u4EF6" class="headerlink" title="插件"></a>插件</h2><table>
<thead>
<tr>
<th>名称</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>Package Control</td>
<td>安装插件必备，<a href="https://packagecontrol.io/installation" target="_blank" rel="external">下载</a></td>
</tr>
<tr>
<td>AutoFileName</td>
<td>文件路径提示</td>
</tr>
<tr>
<td>Babel</td>
<td>ES6 代码高亮</td>
</tr>
<tr>
<td>Babel Snippets</td>
<td>ES6 代码提示</td>
</tr>
<tr>
<td>BracketHighlighter</td>
<td>括号和标签的高亮</td>
</tr>
<tr>
<td>CSS3</td>
<td>CSS3 代码提示</td>
</tr>
<tr>
<td>CSScomb</td>
<td>CSS 代码格式化</td>
</tr>
<tr>
<td>DocBlockr</td>
<td>快速生成注释文档</td>
</tr>
<tr>
<td>Emmet</td>
<td>快速编写 html</td>
</tr>
<tr>
<td>FileHeader</td>
<td>自动生成文件头</td>
</tr>
<tr>
<td>Git</td>
<td>Git 工具（需要安装Git）</td>
</tr>
<tr>
<td>HTML5</td>
<td>HTML5 帮助插件</td>
</tr>
<tr>
<td>jQuery</td>
<td>jQuery api 提示</td>
</tr>
<tr>
<td>JSCS-Formatter</td>
<td>js 格式化插件（需要安装 jscs <code>npm i -g jscs</code>）</td>
</tr>
<tr>
<td>LESS</td>
<td>less 代码高亮</td>
</tr>
<tr>
<td>SFTP</td>
<td>ftp 插件</td>
</tr>
<tr>
<td>SideBarEnhancements</td>
<td>侧边栏增强插件</td>
</tr>
<tr>
<td>SublimeCodeIntel</td>
<td>代码提示插件</td>
</tr>
<tr>
<td>SublimeLinter</td>
<td>代码格式检查基础插件</td>
</tr>
<tr>
<td>SublimeLinter-contrib-eslint</td>
<td>eslint 代码格式检查插件（需要安装eslint@1 <code>npm i -g eslint@1</code>）</td>
</tr>
<tr>
<td>SublimeLinter-json</td>
<td>json 格式检查</td>
</tr>
<tr>
<td>SVN</td>
<td>svn 插件</td>
</tr>
<tr>
<td>Terminal</td>
<td>快速打开命令行</td>
</tr>
<tr>
<td>TrailingSpaces</td>
<td>自动删除多余的空格</td>
</tr>
<tr>
<td>Volt</td>
<td>Volt 文件高亮</td>
</tr>
<tr>
<td>Vue Syntax Highlight</td>
<td>vue 文件代码高亮</td>
</tr>
</tbody>
</table>
<h2 id="u76AE_u80A4"><a href="#u76AE_u80A4" class="headerlink" title="皮肤"></a>皮肤</h2><p>推荐一套看起来比较舒服的皮肤<code>Seti_UI</code></p>
<h2 id="Sublime__u914D_u7F6E_u6587_u4EF6"><a href="#Sublime__u914D_u7F6E_u6587_u4EF6" class="headerlink" title="Sublime 配置文件"></a>Sublime 配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#10;&#9;&#34;Seti_SB_big&#34;: true,&#10;&#9;&#34;Seti_SB_med&#34;: true,&#10;&#9;&#34;Seti_no_blue_bar&#34;: true,&#10;&#9;&#34;Seti_tabs_med&#34;: true,&#10;&#9;&#34;Seti_tabs_small&#34;: true,&#10;&#9;&#34;additional_path_items&#34;:&#10;&#9;[&#10;&#9;&#9;&#34;/usr/local/bin&#34;&#10;&#9;],&#10;&#9;&#34;always_show_minimap_viewport&#34;: true,&#10;&#9;&#34;bold_folder_labels&#34;: true,&#10;&#9;&#34;color_scheme&#34;: &#34;Packages/User/SublimeLinter/Oceanic Next (SL).tmTheme&#34;,&#10;&#9;&#34;default_line_ending&#34;: &#34;unix&#34;,&#10;&#9;&#34;ensure_newline_at_eof_on_save&#34;: true,&#10;&#9;&#34;font_face&#34;: &#34;Fira Mono&#34;,&#10;&#9;&#34;ignored_packages&#34;:&#10;&#9;[&#10;&#9;&#9;&#34;JavaScript&#34;,&#10;&#9;&#9;&#34;Markdown&#34;,&#10;&#9;&#9;&#34;Vintage&#34;&#10;&#9;],&#10;&#9;&#34;line_padding_bottom&#34;: 3,&#10;&#9;&#34;line_padding_top&#34;: 3,&#10;&#9;&#34;overlay_scroll_bars&#34;: &#34;enabled&#34;,&#10;&#9;&#34;tab_size&#34;: 2,&#10;&#9;&#34;theme&#34;: &#34;Seti.sublime-theme&#34;,&#10;&#9;&#34;translate_tabs_to_spaces&#34;: true,&#10;&#9;&#34;trim_trailing_white_space_on_save&#34;: true,&#10;&#9;&#34;word_wrap&#34;: &#34;false&#34;&#10;&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意这里我用到<code>Fira Mono</code>字体，没有的可以去下载安装，等宽字体，看起来比较舒服。</p>
</blockquote>
<h2 id="u5982_u4F55_u8BA9_Sublime__u5E2E_u6211_u68C0_u67E5_u4EE3_u7801_u683C_u5F0F"><a href="#u5982_u4F55_u8BA9_Sublime__u5E2E_u6211_u68C0_u67E5_u4EE3_u7801_u683C_u5F0F" class="headerlink" title="如何让 Sublime 帮我检查代码格式"></a>如何让 Sublime 帮我检查代码格式</h2><ol>
<li><code>npm i -g eslint@1 eslint-config-airbnb eslint-plugin-react</code></li>
<li><p>在项目根目录创建<code>.eslintrc</code>文件内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#10;  &#34;extends&#34;: &#34;airbnb&#34;&#10;&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>现在只要在<code>Sublime</code>编写<code>javascript</code>就会提示错误了。</p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>此文是基于<code>Mac</code>下的<code>Sublime text 3</code>版本的插件配置，不保证兼容<code>Sublime text 2</code>。</p>
</blockquote>]]>
    
    </summary>
    
      <category term="editor" scheme="http://iamcc.github.io/tags/editor/"/>
    
      <category term="exp" scheme="http://iamcc.github.io/tags/exp/"/>
    
      <category term="sublime" scheme="http://iamcc.github.io/tags/sublime/"/>
    
      <category term="tools" scheme="http://iamcc.github.io/tags/tools/"/>
    
      <category term="tools" scheme="http://iamcc.github.io/categories/tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[56个 PHP 开发常用代码片段]]></title>
    <link href="http://iamcc.github.io/2016/02/15/56%E4%B8%AA-PHP-%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5/"/>
    <id>http://iamcc.github.io/2016/02/15/56个-PHP-开发常用代码片段/</id>
    <published>2016-02-15T01:28:40.000Z</published>
    <updated>2016-02-15T01:29:27.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://www.phpxs.com/code/1009843" target="_blank" rel="external">http://www.phpxs.com/code/1009843</a></p>
<a id="more"></a>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://www.phpxs.com/code/1009843">http://www.phpxs.com/code/1009843</a></p>]]>
    
    </summary>
    
      <category term="code" scheme="http://iamcc.github.io/tags/code/"/>
    
      <category term="php" scheme="http://iamcc.github.io/tags/php/"/>
    
      <category term="tech" scheme="http://iamcc.github.io/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何在 VPS 上搭建 VPN 来翻墙 ]]></title>
    <link href="http://iamcc.github.io/2016/02/15/%E5%A6%82%E4%BD%95%E5%9C%A8-VPS-%E4%B8%8A%E6%90%AD%E5%BB%BA-VPN-%E6%9D%A5%E7%BF%BB%E5%A2%99/"/>
    <id>http://iamcc.github.io/2016/02/15/如何在-VPS-上搭建-VPN-来翻墙/</id>
    <published>2016-02-15T01:17:23.000Z</published>
    <updated>2016-02-15T01:18:46.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://www.jianshu.com/p/2f51144c35c9" target="_blank" rel="external">http://www.jianshu.com/p/2f51144c35c9</a></p>
<a id="more"></a>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://www.jianshu.com/p/2f51144c35c9">http://www.jianshu.com/p/2f51144c35c9</a></p>]]>
    
    </summary>
    
      <category term="shadowsocks" scheme="http://iamcc.github.io/tags/shadowsocks/"/>
    
      <category term="ss" scheme="http://iamcc.github.io/tags/ss/"/>
    
      <category term="vpn" scheme="http://iamcc.github.io/tags/vpn/"/>
    
      <category term="vps" scheme="http://iamcc.github.io/tags/vps/"/>
    
      <category term="翻墙" scheme="http://iamcc.github.io/tags/%E7%BF%BB%E5%A2%99/"/>
    
      <category term="tech" scheme="http://iamcc.github.io/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[RSA算法原理]]></title>
    <link href="http://iamcc.github.io/2016/02/04/RSA%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86/"/>
    <id>http://iamcc.github.io/2016/02/04/RSA算法原理/</id>
    <published>2016-02-04T08:36:11.000Z</published>
    <updated>2016-02-04T08:39:25.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html</a><br><a href="http://www.ruanyifeng.com/blog/2013/07/rsa_algorithm_part_two.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2013/07/rsa_algorithm_part_two.html</a><br><a id="more"></a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html">http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html</a><br><a href="http://www.ruanyifeng.com/blog/2013/07/rsa_algorithm_part_two.html">http://www.ruanyifeng.com/blog/2013/07/rsa_algorithm_part_two.html</a><br>]]>
    
    </summary>
    
      <category term="rsa" scheme="http://iamcc.github.io/tags/rsa/"/>
    
      <category term="tech" scheme="http://iamcc.github.io/tags/tech/"/>
    
      <category term="算法" scheme="http://iamcc.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="tech" scheme="http://iamcc.github.io/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ECMAScript 6 入门]]></title>
    <link href="http://iamcc.github.io/2016/01/28/ECMAScript-6-%E5%85%A5%E9%97%A8/"/>
    <id>http://iamcc.github.io/2016/01/28/ECMAScript-6-入门/</id>
    <published>2016-01-28T03:54:52.000Z</published>
    <updated>2016-01-28T05:05:36.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://es6.ruanyifeng.com/" target="_blank" rel="external">http://es6.ruanyifeng.com/</a><br><a id="more"></a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://es6.ruanyifeng.com/">http://es6.ruanyifeng.com/</a><br>]]>
    
    </summary>
    
      <category term="es2015" scheme="http://iamcc.github.io/tags/es2015/"/>
    
      <category term="es6" scheme="http://iamcc.github.io/tags/es6/"/>
    
      <category term="javascript" scheme="http://iamcc.github.io/tags/javascript/"/>
    
      <category term="js" scheme="http://iamcc.github.io/tags/js/"/>
    
      <category term="tech" scheme="http://iamcc.github.io/tags/tech/"/>
    
      <category term="tech" scheme="http://iamcc.github.io/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[深入解析Go]]></title>
    <link href="http://iamcc.github.io/2016/01/22/%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90Go/"/>
    <id>http://iamcc.github.io/2016/01/22/深入解析Go/</id>
    <published>2016-01-22T04:44:25.000Z</published>
    <updated>2016-01-28T05:05:30.000Z</updated>
    <content type="html"><![CDATA[<p><a href="https://tiancaiamao.gitbooks.io/go-internals/content/zh/" target="_blank" rel="external">https://tiancaiamao.gitbooks.io/go-internals/content/zh/</a><br><a id="more"></a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://tiancaiamao.gitbooks.io/go-internals/content/zh/">https://tiancaiamao.gitbooks.io/go-internals/content/zh/</a><br>]]>
    
    </summary>
    
      <category term="cgo" scheme="http://iamcc.github.io/tags/cgo/"/>
    
      <category term="go" scheme="http://iamcc.github.io/tags/go/"/>
    
      <category term="golang" scheme="http://iamcc.github.io/tags/golang/"/>
    
      <category term="tech" scheme="http://iamcc.github.io/tags/tech/"/>
    
      <category term="tech" scheme="http://iamcc.github.io/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Go语言调用C]]></title>
    <link href="http://iamcc.github.io/2016/01/22/Go%E8%AF%AD%E8%A8%80%E8%B0%83%E7%94%A8C/"/>
    <id>http://iamcc.github.io/2016/01/22/Go语言调用C/</id>
    <published>2016-01-22T04:36:10.000Z</published>
    <updated>2016-01-28T05:05:39.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://www.hoverlees.com/blog/?p=1465" target="_blank" rel="external">http://www.hoverlees.com/blog/?p=1465</a><br><a id="more"></a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://www.hoverlees.com/blog/?p=1465">http://www.hoverlees.com/blog/?p=1465</a><br>]]>
    
    </summary>
    
      <category term="c" scheme="http://iamcc.github.io/tags/c/"/>
    
      <category term="cgo" scheme="http://iamcc.github.io/tags/cgo/"/>
    
      <category term="go" scheme="http://iamcc.github.io/tags/go/"/>
    
      <category term="golang" scheme="http://iamcc.github.io/tags/golang/"/>
    
      <category term="tech" scheme="http://iamcc.github.io/tags/tech/"/>
    
      <category term="tech" scheme="http://iamcc.github.io/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Google搜索技巧]]></title>
    <link href="http://iamcc.github.io/2016/01/21/Google%E6%90%9C%E7%B4%A2%E6%8A%80%E5%B7%A7/"/>
    <id>http://iamcc.github.io/2016/01/21/Google搜索技巧/</id>
    <published>2016-01-21T07:20:06.000Z</published>
    <updated>2016-01-28T05:05:51.000Z</updated>
    <content type="html"><![CDATA[<p><br>    在今天，用户可以通过搜索引擎轻松找出自己想要的信息，但还是难以避免结果不尽如人意的情况。实际上，用户仅需掌握几个常用技巧即可轻松化解这种尴尬。下面介绍 10 个在进行 Google 搜索时可以使用的便捷技巧，其他搜索引擎也支持这 10 种技巧。<br></p><br><a id="more"></a><br><p>1、准确搜索</p><br><p align="center"><br>    <img height="324" alt="" width="498" src="http://cimage.tianjimedia.com/uploadImages/20160120090324113.jpg"></p><br><p>最简单、有效的准确搜索方式是在关键词上加上双引号，在这种情况下，搜索引擎只会反馈和关键词完全吻合的搜索结果。</p><br><p><br>    比方说在搜索「Joe Bloggs」的时候，在没有给关键词加上双引号的情况，搜索引擎会显示所有分别和「Joe」以及「Bloggs」相关的信息，但这些显然并不是我们想要 的结果。但在加上双引号后，搜索引擎则仅会在页面上反馈和「Joe Bloggs」相吻合的信息。<br></p><br><p>准确搜索在排除常见但相近度偏低的信息时非常有用，可以为用户省去再度对结果进行筛选的麻烦。</p><br><p>2、排除关键词</p><br><p align="center"><br>    <img height="351" alt="" width="498" src="http://cimage.tianjimedia.com/uploadImages/20160120090324931.jpg"></p><br><p>如果在进行准确搜索时没有找到自己想要的结果，用户可以对包含特定词汇的信息进行排除，仅需使用减号即可。</p><br><p><br>    例如在搜索「『Joe Bloggs』-jeans」时，你所得到的结果反馈是不包含「jeans」字眼的「Joe Bloggs」条目。<br></p><br><p>3、用「Either OR」(或)逻辑进行搜索</p><br><p align="center"><br>    <img height="295" alt="" width="493" src="http://cimage.tianjimedia.com/uploadImages/20160120090324130.jpg"></p><br><p><br>    在默认搜索下，搜索引擎会反馈所有和查询词汇相关的结果，但通过使用「OR」逻辑，你可以得到和两个关键词分别相关的结果，而不仅仅是和两个关键词 都同时相关的结果。巧妙使用「OR」搜索可以让你在未能确定哪个关键词对于搜索结果起决定作用时依然可以确保搜索结果的准确性。<br></p><br><p>4、同义词搜索</p><br><p align="center"><br>    <img height="272" alt="" width="454" src="http://cimage.tianjimedia.com/uploadImages/20160120090325927.jpg"></p><br><p>有时候对不太确切的关键词进行搜索反而会显得更加合适。在未能准确判断关键词的情况下，你可以通过同义词进行搜索。</p><br><p><br>    如果你在搜索引擎输入「plumbing ~university」，你所得到的反馈结果会包含「plumbing universities」和「plumbing colleges」等相似条目。<br></p><br><p>5、在站内进行搜索</p><br><p align="center"><br>    <img height="303" alt="" width="498" src="http://cimage.tianjimedia.com/uploadImages/20160120090325251.jpg"></p><br><p>绝大部分网站的搜索功能都有所欠缺，因此，更好的方法是通过 Google 等搜索引擎对站内的信息进行搜索。</p><br><p><br>    你只需要在搜索引擎上输入「site:theguardian.com」加上关键词，搜索引擎就会反馈网站「theguardian.com」内和关键词相关的所有条目。如果再结合准确搜索功能，这项功能将会变得更加强大。<br></p><br><p>6、善用星号</p><br><p align="center"><br>    <img height="306" alt="" width="498" src="http://cimage.tianjimedia.com/uploadImages/20160120090325603.jpg"></p><br><p><br>    正如拼图游戏「Scrabble」的空白方块一样，在搜索引擎中，我们可以用星号填补关键词中的缺失部分，不论缺失的是一连串单词的其中一个还是一个单词的某一部分。此外，当你希望搜索一篇确定性偏低的文章时，也可以使用星号填补缺失部分。<br></p><br><p><br>    例如，如果你在搜索引擎中输入「architect*」，你所得到的反馈结果将会是所有包含 architect、architectural、architecture、architected、architecting 以及其他所有以「architect」作为开头的词汇的条目。<br></p><br><p>7、在两个数值之间进行搜索</p><br><p align="center"><br>    <img height="303" alt="" width="498" src="http://cimage.tianjimedia.com/uploadImages/20160120090325874.jpg"></p><br><p><br>    在寻找问题的答案时，一个很好的方法是在一定范围内寻找和关键词相关的资讯。例如想要找出 1920 至 1950 年间的英国首相，直接在搜索引擎中输入「英国首相 1920.. 1950」即可得出想要的结果。<br></p><br><p>记住，数值之间的符号是两个英文句号加一个空格键。</p><br><p>8、在网页标题、链接和主体中搜索关键词</p><br><p align="center"><br>    <img height="338" alt="" width="498" src="http://cimage.tianjimedia.com/uploadImages/20160120090325238.jpg"></p><br><p><br>    有时你或许会遇上找出所有和关键词相关的所有网页标题、链接和网页主体的需求，在这个时候你需要使用的是限定词「inurl:」(供在 url 链接中搜索使用)、「intext:」(供在网页主体中搜索使用)以及「intitle:」(供在网页标题中搜索使用)。<br></p><br><p>例如，在搜索引擎中输入「intitle: 评测」会得到所有和关键词「评测」相关的网页标题。</p><br><p>9、搜索相关网站</p><br><p align="center"><br>    <img height="298" alt="" width="497" src="http://cimage.tianjimedia.com/uploadImages/20160120090325204.jpg"></p><br><p><br>    相关的限定词可用于搜索相关网站时使用。例如，你仅需在搜索引擎中输入「related:theguardian.com」即可得到所有和「theguardian.com」相关的网站反馈结果。<br></p><br><p>10、搜索技能的组合使用</p><br><p align="center"><br>    <img height="337" alt="" width="498" src="http://cimage.tianjimedia.com/uploadImages/20160120090326648.jpg"></p><br><p><br>    你可以对上述所有搜索技能进行组合运用，以便按照自己的意愿缩小或者扩展搜索范围。尽管有些技能或许并不常用，但准确搜索和站内搜索这些技能的使用范围还是相当广泛的。<br></p><br><p><br>    随着 Google 等搜索引擎对于用户自然语言的理解程度与日俱增，这些搜索技能可以派上用场的情况或许将会变得越来越少，至少这是所有搜索引擎共同追求的目标。但是在当下，掌握这些搜索技能还是非常必要的。<br></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><br>    在今天，用户可以通过搜索引擎轻松找出自己想要的信息，但还是难以避免结果不尽如人意的情况。实际上，用户仅需掌握几个常用技巧即可轻松化解这种尴尬。下面介绍 10 个在进行 Google 搜索时可以使用的便捷技巧，其他搜索引擎也支持这 10 种技巧。<br></p><br>]]>
    
    </summary>
    
      <category term="google" scheme="http://iamcc.github.io/tags/google/"/>
    
      <category term="search" scheme="http://iamcc.github.io/tags/search/"/>
    
      <category term="tech" scheme="http://iamcc.github.io/tags/tech/"/>
    
      <category term="tech" scheme="http://iamcc.github.io/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2016]]></title>
    <link href="http://iamcc.github.io/2016/01/20/2016/"/>
    <id>http://iamcc.github.io/2016/01/20/2016/</id>
    <published>2016-01-20T01:06:31.000Z</published>
    <updated>2016-01-21T07:23:09.000Z</updated>
    <content type="html"><![CDATA[<p>2016 想记录点什么。</p>
<a id="more"></a>
<p>但是。。。暂时还不知道要记录什么。😂</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>2016 想记录点什么。</p>]]>
    
    </summary>
    
      <category term="personal" scheme="http://iamcc.github.io/tags/personal/"/>
    
      <category term="personal" scheme="http://iamcc.github.io/categories/personal/"/>
    
  </entry>
  
</feed>
